
[gcode_macro AFC_POOP]
variable_max_iteration_length: 40
variable_iteration_z_raise: 6
variable_iteration_z_change: 0.6
variable_max_iterations_per_blob: 3
variable_pressure_release_time: 1000
variable_purge_z: 0

gcode:
  {% set gVars                  = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
  {% set travel_speed           = gVars['travel_speed'] * 60|float %}
  {% set z_travel_speed         = gVars['z_travel_speed'] * 60|float %}
  {% set verbose                = gVars['verbose']|int %}
  {% set vars                   = printer['gcode_macro _AFC_POOP_VARS'] %}
  {% set purge_x, purge_y       = vars.purge_loc_xy|map('float') %}
  {% set purge_spd              = vars['purge_spd'] * 60|float %}
  {% set z_poop                 = vars['z_purge_move']|default(true)|lower == 'true' %}
  {% set fast_z                 = vars['fast_z'] * 60|float %}
  {% set z_lift                 = vars['z_lift']|float %}
  {% set part_cooling_fan       = vars['part_cooling_fan']|default(true)|lower == 'true' %}
  {% set part_cooling_fan_speed = vars['part_cooling_fan_speed']|default(1.0)|float %}
  {% set purge_cool_time        = vars['purge_cool_time'] * 1000|float %}
  {% set purge_length           = vars['purge_length']|float %}
  {% set purge_length_minimum   = vars['purge_length_minimum']|float %}
  {% set purge_start            = vars['purge_start']|float %}
  {% set restore_position       = vars['restore_position']|default(true)|lower == 'true' %}

  {% if verbose > 0 %}
    RESPOND TYPE=command MSG='AFC_Poop: Starting poop'
  {% endif %}

  SAVE_GCODE_STATE NAME=_AFC_POOPING

  {% if part_cooling_fan %}
    {% if verbose > 1 %}
      RESPOND TYPE=command MSG='AFC_Poop: Set Cooling Fan to Full Speed'
    {% endif %}
    {% set backup_fan_speed = printer.fan.speed %}
    M106 S{(part_cooling_fan_speed * 255)|int}
  {% endif %}
  
  {% set backup_feedrate = printer.gcode_move.speed_factor %}
  M220 S100
    
  {% if params.PURGE_LENGTH %}
    {% set purge_len = params.PURGE_LENGTH|float %}
  {% else %} 
    {% set purge_len = purge_length %}
  {% endif %}
    
  # Apply purge minimum
  {% set purge_len = [purge_len, purge_length_minimum]|max %}
  G90

  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Poop: Move To Purge Location'
  {% endif %}
  
  G1 X{purge_x} Y{purge_y} F{travel_speed}

  {% if verbose > 1 %}
   RESPOND TYPE=command MSG='AFC_Poop: z_poop {z_poop}'
  {% endif %}

  {% if z_poop %}
    G1 Z{purge_z + purge_start} F{z_travel_speed}
  {% endif %}
    
  {% set iterations = (purge_len / max_iteration_length)|round(0, 'ceil')|int %}

  # Repeat the process until purge_len is reached
  {% for n in range(iterations) %}
    {% if verbose > 1 %}
      RESPOND TYPE=command MSG='AFC_Poop: Purge Iteration {n}'
    {% endif %}

    # Calculate current iteration in current blob
    {% set step = n % max_iterations_per_blob %}
    {% if step == 0 %}
      {% if z_poop %}
        G1 Z{purge_z + purge_start} F{z_travel_speed}
      {% endif %}
    {% endif %}

    {% set purge_amount_left = purge_len - (max_iteration_length * n) %}
    {% set extrude_amount = [purge_amount_left, max_iteration_length]|min %}
    {% set extrude_ratio = extrude_amount / max_iteration_length %}

    G91 
    M83

    {% set step_triangular = step * (step + 1) / 2 %}
    {% set z_raise_substract = purge_start if step == 0 else step_triangular * iteration_z_change %}
    {% set raise_z = (iteration_z_raise - z_raise_substract) * extrude_ratio %}
    {% set raise_z = [raise_z, 0]|max %}

    {% set duration = extrude_amount / purge_spd %} 

    {% if z_poop %}
      {% set speed = raise_z / duration %}
      G1 Z{raise_z} E{extrude_amount} F{speed}
    {% else %}
      G1 E{extrude_amount} F{purge_spd}
    {% endif %}


    {% set max_iterations_reached = step == max_iterations_per_blob - 1 %}
    {% set purge_length_reached = purge_len - max_iteration_length * (n + 1) <= 0 %}

    {% if max_iterations_reached or purge_length_reached %}
      M83
      G4 P{purge_cool_time}  # Pause
    {% endif %}
  {% endfor %}

  G90
  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Poop: Fast Z Lift to keep poop from sticking'
  {% endif %}

  {% if z_poop %}
    G1 Z{z_lift} F{fast_z}21000
  {% endif %} 

  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Poop: Restore fan speed and feedrate'
  {% endif %}
  {% if part_cooling_fan %}
    M106 S{(backup_fan_speed * 255)|int}
  {% endif %}
  M220 S{(backup_feedrate * 100)|int}

  RESTORE_GCODE_STATE NAME=_AFC_POOPING MOVE={1 if restore_position else 0}
