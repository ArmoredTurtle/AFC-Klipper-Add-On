[gcode_macro AFC_KICK]
gcode:
  {% set gVars = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
  {% set accel = gVars['accel']|float %}
  {% set travel_speed = gVars['travel_speed'] * 60|float %}
  {% set z_travel_speed = gVars['z_travel_speed'] * 60|float %}
  {% set verbose = gVars['verbose']|int %}
  {% set vars = printer['gcode_macro _AFC_KICK_VARS'] %}
  {% set kick_start_x, kick_start_y, kick_start_z = vars.kick_start_loc|map('float') %}
  {% set kick_z = vars['kick_z']|float %}
  {% set kick_direction = vars['kick_direction']|default('')|lower %}
  {% set kick_move_dist = vars['kick_move_dist']|float %}
  {% set z_after_kick = vars['z_after_kick']|float %}
  {% set kick_speed = vars['kick_speed'] * 60|float %}
  {% set kick_accel = vars['kick_accel']|float %}

  # Get printer bounds to make sure none of our kick moves fall outside of them
  {% set x_max = printer.toolhead.axis_maximum.x %}
  {% set x_min = printer.toolhead.axis_minimum.x %}
  {% set y_max = printer.toolhead.axis_maximum.y %}
  {% set y_min = printer.toolhead.axis_minimum.y %}

  # Save current Accel
  {% set saved_accel = printer.toolhead.max_accel %}

    # Check if macro accel is defined
  {% if kick_accel > 0 %}
      {% set selected_accel = kick_accel %}
  {% else %}
      {% set selected_accel = accel %}
  {% endif %}

  SET_VELOCITY_LIMIT ACCEL={selected_accel}

  {% if verbose > 0 %}
    RESPOND TYPE=command MSG='AFC_Kick: Starting Filament Kick'
  {% endif %}

  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Kick: Move to Start Position'
  {% endif %}
  G1 Z{kick_start_z} F{z_travel_speed}
  G1 X{kick_start_x} Y{kick_start_y} F{travel_speed}

  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Kick: Drop Z For Kick Move'
  {% endif %}
  {% if kick_z > 0 %}
    G1 Z{kick_z} F{z_travel_speed}
  {% else %}
    RESPOND TYPE=command MSG='AFC-KICK: kick_z value to low. Please adjust in AFC_Macro_Vars.cfg. Defaulting to 0.5mm z-height'
    G1 Z0.5 F{z_travel_speed}
  {% endif %}

  {% set location_factor = {
        'left'  : { 'x': -1, 'y':  0 },
        'right' : { 'x':  1, 'y':  0 },
        'front' : { 'x':  0, 'y': -1 },
        'back'  : { 'x':  0, 'y':  1 }
    } %}

  {% if verbose > 1 %}
    RESPOND TYPE=command MSG='AFC_Kick: Kick filament'
  {% endif %}
  {% if kick_direction == "left" or kick_direction == "right" %}
    {% if (kick_start_x + location_factor[kick_direction].x * kick_move_dist) > x_max or (kick_start_x + location_factor[kick_direction].x * kick_move_dist) < x_min %}
      { action_raise_error("X Kick move is outside your printer bounds. Check the kick_move_dist in your AFC_Macro_Vars.cfg file!") }
    {% else %}
    	G1 X{kick_start_x + location_factor[kick_direction].x * kick_move_dist}  F{kick_speed}
    {% endif %}
  {% elif kick_direction == "front" or kick_direction == "back" %}
    {% if (kick_start_y + location_factor[kick_direction].y * kick_move_dist) > y_max or (kick_start_y + location_factor[kick_direction].y * kick_move_dist) < y_min %}
      { action_raise_error("Y Kick move is outside your printer bounds. Check the kick_move_dist in your AFC_Macro_Vars.cfg file!") }
    {% else %}
    	G1 Y{kick_start_y + location_factor[kick_direction].y * kick_move_dist}  F{kick_speed}
    {% endif %}
  {% else %}
	{ action_raise_error("Error in kick movement. Check the directions in your AFC_Macro_Vars.cfg file!") }
  {% endif %}
  
  G1 Z{z_after_kick} F{z_travel_speed}

  # Reset acceleration values to what it was before
  SET_VELOCITY_LIMIT ACCEL={saved_accel}