[gcode_macro AFC_CUT]
description: Cut filament by pressing the cutter on a pin
gcode:
    {% set gVars = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
    {% set accel = gVars['accel']|float %}
    {% set travel_speed = gVars['travel_speed'] * 60|float %}
    {% set verbose = gVars['verbose']|int %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}
    {% set pin_loc_x, pin_loc_y = vars.pin_loc_xy|map('float') %}
    {% set pin_park_dist = vars['pin_park_dist']|float %}
    {% set retract_length = vars['retract_length']|float %}
    {% set quick_tip_forming = vars['quick_tip_forming']|default(true)|lower == 'true' %}
    {% set rip_length = vars['rip_length']|float %}
    {% set cut_direction = vars['cut_direction']|default('')|lower %}
    {% set cut_accel = vars['cut_accel']|float %}
    {% set pushback_length = vars['pushback_length']|float %}
    {% set pushback_dwell_time = vars['pushback_dwell_time']|int %}
    {% set extruder_move_speed = vars['extruder_move_speed'] * 60|float %}
    {% set restore_position = vars['restore_position']|default(true)|lower == 'true' %}
    {% set cut_count = vars['cut_count']|int %}
    {% set y_cut = vars['y_cut']|default(false)|lower == 'true' %}

    {% if verbose > 0 %}
      RESPOND TYPE=command MSG='AFC_Cut: Cut Filament'
    {% endif %}

    {% set location_factor = {
        'left'  : { 'x':  1, 'y':  0 },
        'right' : { 'x': -1, 'y':  0 },
        'front' : { 'x':  0, 'y':  1 },
        'back'  : { 'x':  0, 'y': -1 }
    } %}
    
    # Add safe move distance to x or y depending on cut type
    {% if cut_direction == "left" or cut_direction == "right" %}
        {% set pin_park_x_loc = pin_loc_x + location_factor[cut_direction].x * pin_park_dist %}
        {% set pin_park_y_loc = pin_loc_y %}
    {% elif cut_direction == "front" or cut_direction == "back" %}
        {% set pin_park_x_loc = pin_loc_x %}
        {% set pin_park_y_loc = pin_loc_y + location_factor[cut_direction].y * pin_park_dist %}
    {% else %}
        { action_raise_error("Invalid cut direction. Check the cut_direction in your AFC_Macro_Vars.cfg file!") }
    {% endif %}

    # Track total extruder move dist for future use
    {% set _extruder_moved_dist = 0 %}

    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

    SAVE_GCODE_STATE NAME=_AFC_CUT

    # Save current Accel   
    {% set saved_accel = printer.toolhead.max_accel %}

    # Check if macro accel is defined
    {% if cut_accel > 0 %}
        {% set selected_accel = cut_accel %}
    {% else %}
        {% set selected_accel = accel %}
    {% endif %}

    SET_VELOCITY_LIMIT ACCEL={selected_accel}

    {% set prev_pa = printer.extruder.pressure_advance %}  # Save current PA
    SET_PRESSURE_ADVANCE ADVANCE=0  # Temporarily disable PA

    G90  # Absolute positioning
    M83  # Relative extrusion
    G92 E0
    {% if retract_length > 0 %}

        {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Cut: Retract Filament for Cut'
        {% endif %}
        # Retract to save filament waste, repeat to allow some cooling
        G1 E-{retract_length} F{extruder_move_speed}
        
        {% if quick_tip_forming %}
            {% if verbose > 1 %}
              RESPOND TYPE=command MSG='AFC_Cut: Performing Quick Tip Form'
            {% endif %}
            G1 E{retract_length / 2} F{extruder_move_speed}
            G1 E-{retract_length / 2} F{extruder_move_speed}
        {% endif %}
        
        {% set _extruder_moved_dist = _extruder_moved_dist + retract_length %}
    {% endif %}

    {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Cut: Move to Cut Pin Location'
    {% endif %}
    _MOVE_TO_CUTTER_PIN PIN_PARK_X_LOC={pin_park_x_loc} PIN_PARK_Y_LOC={pin_park_y_loc}

    {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Cut: Cut Move...'
    {% endif %}
    
    {% for cut in range(cut_count - 1) %}
        _DO_CUT_MOTION PIN_PARK_X_LOC={pin_park_x_loc} PIN_PARK_Y_LOC={pin_park_y_loc} RIP_LENGTH=0
    {% endfor %}

    {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Cut: Final Cut...'
    {% endif %}

    # Do a rip on final cut pass
    _DO_CUT_MOTION PIN_PARK_X_LOC={pin_park_x_loc} PIN_PARK_Y_LOC={pin_park_y_loc} RIP_LENGTH={rip_length}
    
    {% set _extruder_moved_dist = _extruder_moved_dist + rip_length %}

    # Optionally pushback of the cut piece into the hotend to avoid potential clog
    {% if pushback_length > 0 %}
        {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Cut: Push cut tip back into hotend'
        {% endif %}
        G1 E{pushback_length} F{extruder_move_speed}
        G4 P{pushback_dwell_time}
        G1 E-{pushback_length} F{extruder_move_speed}
        
        {% set _extruder_moved_dist = _extruder_moved_dist - pushback_length %}
    {% endif %}

    SET_PRESSURE_ADVANCE ADVANCE={prev_pa}  # Restore PA

    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel}

    # Restore state and optionally position
    RESTORE_GCODE_STATE NAME=_AFC_CUT MOVE={1 if restore_position else 0} MOVE_SPEED={travel_speed}


#--=================================================================================-
#------- Helper macro for tip cutting -----------------------------------------------
#--=================================================================================-
[gcode_macro _MOVE_TO_CUTTER_PIN]
description: Helper to move the toolhead to the target pin in either safe or faster way, depending on toolhead clearance
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC|float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC|float %}
    {% set gVars = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
    {% set travel_speed = gVars['travel_speed'] * 60|float %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}
    {% set safe_margin_x, safe_margin_y = vars.safe_margin_xy|map('float') %}

    {% if ((printer.gcode_move.gcode_position.x - pin_park_x_loc)|abs < safe_margin_x) or ((printer.gcode_move.gcode_position.y - pin_park_y_loc)|abs < safe_margin_y) %}
        # Make a safe but slower travel move
        G1 X{pin_park_x_loc} F{travel_speed}
        G1 Y{pin_park_y_loc} F{travel_speed}
    {% else %}
        G1 X{pin_park_x_loc} Y{pin_park_y_loc} F{travel_speed}
    {% endif %}


#--=================================================================================-
#------- Helper macro for tip cutting -----------------------------------------------
#--=================================================================================-
[gcode_macro _DO_CUT_MOTION]
description: Helper to do a single horizontal cut movement
gcode:
    {% set pin_park_x_loc = params.PIN_PARK_X_LOC|float %}
    {% set pin_park_y_loc = params.PIN_PARK_Y_LOC|float %}
    {% set vars = printer['gcode_macro _AFC_CUT_TIP_VARS'] %}
    {% set cut_move_dist = vars['cut_move_dist']|float %}
    {% set cut_direction = vars['cut_direction']|default('')|lower %}
    {% set cut_fast_move_fraction = vars['cut_fast_move_fraction']|float %}
    {% set pin_park_dist = vars['pin_park_dist']|float %}
    {% set cut_fast_move_speed = vars['cut_fast_move_speed'] * 60|float %}
    {% set cut_slow_move_speed = vars['cut_slow_move_speed'] * 60|float %}
    {% set cut_dwell_time = vars['cut_dwell_time']|float %}
    {% set evacuate_speed = vars['evacuate_speed'] * 60|float %}
    {% set rip_length = vars['rip_length']|float %}
    {% set rip_speed = vars['rip_speed'] * 60|float %}

    # Get printer bounds to make sure none of our cut moves fall outside of them
    {% set x_max = printer.toolhead.axis_maximum.x %}
    {% set x_min = printer.toolhead.axis_minimum.x %}
    {% set y_max = printer.toolhead.axis_maximum.y %}
    {% set y_min = printer.toolhead.axis_minimum.y %}

    # Add the safe park distance to the cut move
    {% set cut_dist = cut_move_dist + pin_park_dist %}

    {% set location_factor = {
        'left'  : { 'x': -1, 'y':  0 },
        'right' : { 'x':  1, 'y':  0 },
        'front' : { 'x':  0, 'y': -1 },
        'back'  : { 'x':  0, 'y':  1 }
    } %}

    {% if cut_direction == "left" or cut_direction == "right" %}
        {% set fast_slow_transition_loc_x = pin_park_x_loc + location_factor[cut_direction].x * (cut_dist * cut_fast_move_fraction)| float %}
        {% set full_cut_loc_x = pin_park_x_loc + location_factor[cut_direction].x * cut_dist| float %}
      
        {% if full_cut_loc_x > x_max or full_cut_loc_x < x_min %}
            { action_raise_error("X Cut move is outside your printer bounds. Check the cut_move_dist in your AFC_Macro_Vars.cfg file!") }
        {% else %}
        	G1 X{fast_slow_transition_loc_x} F{cut_fast_move_speed} # Fast move to initiate contact of the blade with filament
    		G1 X{full_cut_loc_x} F{cut_slow_move_speed} # Do the cut in slow move
    		G4 P{cut_dwell_time}
    		{% if rip_length > 0 %}
    			G1 E-{rip_length} F{rip_speed}
    		{% endif %}
            G4 P200
    		G1 X{pin_park_x_loc} F{evacuate_speed} # Evacuate
            G4 P200
        {% endif %}
    {% elif cut_direction == "front" or cut_direction == "back" %}
        {% set fast_slow_transition_loc_y = pin_park_y_loc + location_factor[cut_direction].y * (cut_dist * cut_fast_move_fraction)| float %}
        {% set full_cut_loc_y = pin_park_y_loc + location_factor[cut_direction].y * cut_dist| float %}
      
        {% if full_cut_loc_y > y_max or full_cut_loc_y < y_min %}
            { action_raise_error("Y Cut move is outside your printer bounds. Check the cut_move_dist in your AFC_Macro_Vars.cfg file!") }
        {% else %}
        	G1 Y{fast_slow_transition_loc_y} F{cut_fast_move_speed} # Fast move to initiate contact of the blade with filament
    		G1 Y{full_cut_loc_y} F{cut_slow_move_speed} # Do the cut in slow move
    		G4 P{cut_dwell_time}
    		{% if rip_length > 0 %}
    			G1 E-{rip_length} F{rip_speed}
    		{% endif %}
            G4 P200
    		G1 Y{pin_park_y_loc} F{evacuate_speed} # Evacuate
            G4 P200
        {% endif %}
    {% else %}
        { action_raise_error("Invalid cut direction. Check the cut_direction in your AFC_Macro_Vars.cfg file!") }
    {% endif %}

