[gcode_macro AFC_BRUSH]
description: Wipe the nozzle on the brush
gcode:
    {% set gVars = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
    {% set accel = gVars['accel']|float %}
    {% set travel_speed = gVars['travel_speed'] * 60|float %}
    {% set z_travel_speed = gVars['z_travel_speed'] * 60|float %}
    {% set verbose = gVars['verbose']|int %}
    {% set vars = printer['gcode_macro _AFC_BRUSH_VARS'] %}
    {% set Bx, By, Bz = vars.brush_loc|map('float') %}
    {% set brush_clean_accel = vars['brush_clean_accel']|float %}
    {% set y_brush = vars['y_brush']|default(false)|lower == 'true' %}
    {% set brush_clean_speed = vars['brush_clean_speed'] * 60|float %}
    {% set brush_width = vars['brush_width']|float %}
    {% set brush_depth = vars['brush_depth']|float %}
    {% set brush_count = vars['brush_count']|int %}

    # Get printer bounds to make sure none of our cleaning moves fall outside of them
    {% set x_max = printer.toolhead.axis_maximum.x %}
    {% set x_min = printer.toolhead.axis_minimum.x %}
    {% set y_max = printer.toolhead.axis_maximum.y %}
    {% set y_min = printer.toolhead.axis_minimum.y %}

    # Get min and max positions for brush moves
    {% set brush_x_max = Bx + brush_width / 2 %}
    {% set brush_x_min = Bx - brush_width / 2 %}
    {% set brush_y_max = By + brush_depth / 2 %}
    {% set brush_y_min = By - brush_depth / 2 %}

    # Set the cleaning acceleration prior to any movement
    {% set saved_accel = printer.toolhead.max_accel %}

    # Check if macro accel is defined
    {% if brush_clean_accel > 0 %}
        {% set selected_accel = brush_clean_accel %}
    {% else %}
        {% set selected_accel = accel %}
    {% endif %}
    
    SET_VELOCITY_LIMIT ACCEL={selected_accel}

    {% if verbose > 0 %}
      RESPOND TYPE=command MSG='AFC_Brush: Clean Nozzle'
    {% endif %}

    # Move to center of the brush
    {% if verbose > 1 %}
      RESPOND TYPE=command MSG='AFC_Brush: Move to Brush.'
    {% endif %}
    
    G1 X{Bx} Y{By} F{travel_speed}

    {% if Bz >= 0 %}
      G1 Z{Bz} F{z_travel_speed}
    {% endif %}
    
    # Wipe procedure
    {% if y_brush %}
        {% if verbose > 1 %}
          RESPOND TYPE=command MSG='AFC_Brush: Y Brush Moves'
        {% endif %}
        {% for wipe in range(brush_count) %}
        
            {% if brush_y_min >= y_min %}
                G1 Y{brush_y_min} F{brush_clean_speed}
            {% endif %}
            
            {% if brush_y_max <= y_max %}
                G1 Y{brush_y_max} F{brush_clean_speed}
            {% endif %}
            
            G1 Y{By} F{brush_clean_speed}

        {% endfor %}
    {% endif %}

    # Brush procedure
    {% if verbose > 1 %}
        RESPOND TYPE=command MSG='AFC_Brush: X Brush Moves'
    {% endif %}
    {% for wipe in range(brush_count) %}
        {% if brush_x_min >= x_min %}
              G1 X{brush_x_min} F{brush_clean_speed}
        {% endif %}
            
        {% if brush_x_max <= x_max %}
              G1 X{brush_x_max} F{brush_clean_speed}
        {% endif %}
            
        G1 X{Bx} F{brush_clean_speed}
            
    {% endfor %}

    # Reset acceleration values to what it was before
    SET_VELOCITY_LIMIT ACCEL={saved_accel}
